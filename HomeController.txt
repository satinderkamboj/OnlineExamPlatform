using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using BusinessLayer;

namespace OnlineExamPlatform.Controllers
{

    public class HomeController : Controller
    {
        public ActionResult Index()
        {
            TempData["msg"] = "Welcome";
            TempData.Keep();
            if (Session["ad_id"] != null)
            {
                return RedirectToAction("tDashboard");
            }
            else if (Session["us_id"] != null)
            {
                return RedirectToAction("uDashboard");
            }
            return View();
        }

        //============================== Teacher Section============================


        public ActionResult tDashboard()
        {
            try
            {
                int temp_id;
                temp_id = Convert.ToInt32(Session["ad_id"]);

                AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
                Admin admin = adminBusinessLayer.Admin.Where(emp => emp.ad_id == temp_id).SingleOrDefault();

                ViewBag.message = "Hi, " + admin.ad_name;
                return View();
            }
            catch (Exception)
            {
                TempData["msg"] = "Kindly Login";
                TempData.Keep();
                return RedirectToAction("Index");
            }
        }

        [HttpGet]
        public ActionResult tLogin()
        {
            return View();
        }
       
        [HttpPost]
        public ActionResult tLogin(Admin ad)
        {
            
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            Admin admin = adminBusinessLayer.Admin.Where(emp => emp.ad_name == ad.ad_name && emp.ad_pass == ad.ad_pass).SingleOrDefault();
            if (admin != null)
            {
                Session["ad_id"] = admin.ad_id;
                return RedirectToAction("tDashboard");
            }
            else
            {
                ViewBag.message = "Invalid Username or Password";
            }

            return View();
        }

        [HttpGet]
        [ActionName("AddQuestion")]
        public ActionResult AddQuestion_Get()
        {
            TempData["msg"] = " ";
            TempData.Keep();
            return View();
        }

        [HttpPost]
        [ActionName("AddQuestion")]
        public ActionResult AddQuestion_Post()
        {
            Question question = new Question();
            TryUpdateModel(question);

            if (ModelState.IsValid)
            {

                AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
                adminBusinessLayer.AddQuestion(question);

                TempData["msg"] = "Question Added Successfully.";
                TempData.Keep();
                return RedirectToAction("AddQuestion");
            }
            return View();
        }

        [HttpGet]
        [ActionName("ViewQuestions")]
        public ActionResult ViewQuestions()
        {
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            List<Question> questions = adminBusinessLayer.ViewQuestions.ToList();

            return View(questions);
        }

        [HttpGet]
        [ActionName("DetQuestion")]
        public ActionResult DetQuestion(int id)
        {
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            List<Question> question = adminBusinessLayer.ViewQuestions.Where(emp => emp.q_id == id).ToList();

            return View(question);
        }

        [HttpGet]
        [ActionName("UpQuestion")]
        public ActionResult UpQuestion_Get(int id)
        {
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            Question question = adminBusinessLayer.ViewQuestions.FirstOrDefault(emp => emp.q_id == id);

            return View(question);
        }

        [HttpPost]
        [ActionName("UpQuestion")]
        public ActionResult UpQuestion_Post(int id)
        {
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            Question question = adminBusinessLayer.ViewQuestions.FirstOrDefault(emp => emp.q_id == id);
            
            TryUpdateModel(question);

            if (ModelState.IsValid)
            {
                adminBusinessLayer.UpdateQuestion(question);

                return RedirectToAction("ViewQuestions");
            }
            return View();
        }

        [HttpPost]
        public ActionResult DelQuestion(int id)
        {
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            adminBusinessLayer.DeleteQuestion(id);

            return RedirectToAction("ViewQuestions");
        }

        

        //=============================== User's Section ==============================

        [HttpGet]
        public ActionResult uLogin()
        {
            return View();
        }

        [HttpPost]
        public ActionResult uLogin(User us)
        {

            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            User user = adminBusinessLayer.User.Where(usr => usr.us_id == us.us_id && usr.us_pass == us.us_pass).SingleOrDefault();
            if (user != null)
            {
                Session["us_id"] = user.us_id;
                return RedirectToAction("uDashboard");
            }
            else
            {
                ViewBag.message = "Invalid Username or Password";
            }

            return View();
        }

        public ActionResult uDashboard()
        {
            try
            {
                int temp_id;
                temp_id = Convert.ToInt32(Session["us_id"]);

                AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
                User user = adminBusinessLayer.User.Where(usr => usr.us_id == temp_id).SingleOrDefault();

                ViewBag.message = "Hi, " + user.us_fname + user.us_lname;
                return View();
            }
            catch (Exception)
            {
                TempData["msg"] = "Kindly Login";
                TempData.Keep();
                return RedirectToAction("Index");
            }
        }

        [HttpGet]
        [ActionName("uSignUp")]
        public ActionResult uSignUp_Get()
        {
            return View();
        }

        [HttpPost]
        [ActionName("uSignUp")]
        public ActionResult uSignUp_Post()
        {
            User user = new User();
            TryUpdateModel(user);

            if (ModelState.IsValid)
            {
                AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();

                int tem = 1;
                int uid;
                do
                {
                    Random generator = new Random();
                    uid = generator.Next(0, 9999);

                    User us = adminBusinessLayer.User.Where(usr => usr.us_id == uid).SingleOrDefault();
                    if (us == null)
                    {
                        tem = 2;
                    }
                } while (tem == 1);
                
                user.us_id = uid;
                adminBusinessLayer.AddUser(user);

                TempData["msg"] = "User Added Successfully.";
                TempData["msg2"] = "Hi " + user.us_fname + ", Use " + user.us_id + " as you User Id to Login.";
                TempData.Keep();
                return RedirectToAction("uSignUp");
            }
            return View();
        }
        [HttpGet]
        [ActionName("Enter")]
        public ActionResult Enter_Get()
        {
            if (Session["us_id"] == null)
                return RedirectToAction("uDashboard");
            return View();
        }


        [HttpPost]
        [ActionName("Enter")]
        public ActionResult Enter_Post()
        {
            Session["Score"] = 0;
            if (ModelState.IsValid)
            {
                Name name = new Name();
                UpdateModel(name);
                Session["ExamName"] = name.ExamName;
            }
            return RedirectToAction("QuizStart");
        }

        [HttpPost]
        [ActionName("QuizStart")]
        public ActionResult QuizStart_Post()
        {
            
            if (ModelState.IsValid)
            {
                Question ques = new Question();
                UpdateModel(ques);
                Session["Desired"] = ques.q_name;
                if (ques.opa != null)
                {
                    if ((ques.correct).Equals("a"))
                        Session["Score"] = Convert.ToInt32(Session["Score"]) + 1;
                }
                else if (ques.opb != null)
                {
                    if ((ques.correct).Equals("b"))
                        Session["Score"] = Convert.ToInt32(Session["Score"]) + 1;
                }
                else if (ques.opc != null)
                {
                    if ((ques.correct).Equals("c"))
                        Session["Score"] = Convert.ToInt32(Session["Score"]) + 1;
                }
                else if (ques.opd != null)
                {
                    if ((ques.correct).Equals("d"))
                        Session["Score"] = Convert.ToInt32(Session["Score"]) + 1;
                }

            }
            return RedirectToAction("QuizStart");
        }


        [HttpGet]
        [ActionName("QuizStart")]
        public ActionResult QuizStart_Get()
        {
            if (Session["us_id"] == null)
                return RedirectToAction("uDashboard");
            if (Session["firstVisit"] == null)
            {
                AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
                List<QuestionPaper> question_papers = adminBusinessLayer.GetQuestionPapers.ToList();
                string s = (string)Session["ExamName"];
                foreach (var item in question_papers)
                {
                    if (item.qp_name == s)
                    {
                        Question ques1 = adminBusinessLayer.getQuestionById(item.q1);
                        Session["quest1"] = ques1;
                        Question ques2 = adminBusinessLayer.getQuestionById(item.q2);
                        Session["quest2"] = ques2;
                        Question ques3 = adminBusinessLayer.getQuestionById(item.q3);
                        Session["quest3"] = ques3;
                        Question ques4 = adminBusinessLayer.getQuestionById(item.q4);
                        Session["quest4"] = ques4;
                        Question ques5 = adminBusinessLayer.getQuestionById(item.q5);
                        Session["quest5"] = ques5;
                        Question ques6 = adminBusinessLayer.getQuestionById(item.q6);
                        Session["quest6"] = ques6;
                        Question ques7 = adminBusinessLayer.getQuestionById(item.q7);
                        Session["quest7"] = ques7;
                        Question ques8 = adminBusinessLayer.getQuestionById(item.q8);
                        Session["quest8"] = ques8;
                        Question ques9 = adminBusinessLayer.getQuestionById(item.q9);
                        Session["quest9"] = ques9;
                        Question ques10 = adminBusinessLayer.getQuestionById(item.q10);
                        Session["quest10"] = ques10;
                    }
                }
                Session["firstVisit"] = "true";
                View((Question)Session["quest1"]);
                Response.Write(Session["Desired"] + " ");

            }
            else
            {
                if (Session["q2"] == null)
                {
                    Session["q2"] = "true";
                    View((Question)Session["quest2"]);
                    Response.Write(Session["Desired"] + " ");
                }
                else if (Session["q3"] == null)
                {
                    Session["q3"] = "true";
                    View((Question)Session["quest3"]);
                    Response.Write(Session["Desired"] + " ");
                }
                else if (Session["q4"] == null)
                {
                    Session["q4"] = "true";
                    View((Question)Session["quest4"]);
                    Response.Write(Session["Desired"] + " ");
                }
                else if (Session["q5"] == null)
                {
                    Session["q5"] = "true";
                    View((Question)Session["quest5"]);
                }
                else if (Session["q6"] == null)
                {
                    Session["q6"] = "true";
                    View((Question)Session["quest6"]);
                }
                else if (Session["q7"] == null)
                {
                    Session["q7"] = "true";
                    View((Question)Session["quest7"]);
                }
                else if (Session["q8"] == null)
                {
                    Session["q8"] = "true";
                    View((Question)Session["quest8"]);
                }
                else if (Session["q9"] == null)
                {
                    Session["q9"] = "true";
                    View((Question)Session["quest9"]);
                }
                else if (Session["q10"] == null)
                {
                    Session["q10"] = "true";
                    View((Question)Session["quest10"]);
                }
                else
                {
                    return RedirectToAction("ExamEnd");
                }
            }
            return View();
        }


        public ActionResult save()
        {
            Report rep = new Report();
            rep.us_id = Convert.ToInt32(Session["us_id"]);
            rep.qp_name = (string)Session["ExamName"];
            rep.marks = Convert.ToInt32(Session["Score"]);
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            adminBusinessLayer.AddReport(rep);
            return RedirectToAction("uDashboard");
        }



        public ActionResult ViewReport()
        {
            Response.Write("in viewreport");
            AdminBusinessLayer adminBusinessLayer = new AdminBusinessLayer();
            List<Report> rep = adminBusinessLayer.getReportById(Convert.ToInt32(Session["us_id"])).ToList();
            return View(rep);
        }

        [HttpPost]
        [ActionName("GenerateReport")]
        public ActionResult GenerateReport_Post()
        {
            return RedirectToAction("ViewReport");

        }

        [HttpGet]
        [ActionName("GenerateReport")]
        public ActionResult GenerateReport_Get()
        {
            return View();

        }

        public ActionResult ExamEnd()
        {
            if (Session["us_id"] == null)
                return RedirectToAction("uDashboard");
            return View();
        }
    }
}